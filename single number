class Solution {
public:
    int singleNumber(vector<int>& nums) {
        //we need to modify the given array, cannot create new array
        //if there are 3 unique elements then we need to return 1,2,3 and replace first
        //3 elements of original array with those 3 and return them. we need to use wtv space
        //is given to us
        //we can use set- for eg [1,1,3,3,4]--we put 1 in set and then when we put 1 again, it wont accept.Same with 3
        //declare a set and keep inserting, you'll get all the unique elements-if that was the ques here
        //now keep an index =0 at array now go to first element of set and place it into 0 index
        //now index++, put next element of set, then next, now nomore elements of set left..
        //now return the size of that array= jis index par stop kara usse ek + karke return coz thats the size of the resultant array
       sort(nums.begin(),nums.end());
       for(int i=1;i<nums.size();i+=2){
           if(nums[i]!=nums[i-1]){
           return nums[i-1];}

       }
       return nums[nums.size()-1];
        
    }
};
